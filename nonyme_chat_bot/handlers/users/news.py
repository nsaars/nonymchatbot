from datetime import datetime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command

from data.config import ADMINS
from keyboards.default.util import yes_no_menu, find_menu, cancel_menu
from loader import dp
from utils.db_api import db_commands


@dp.message_handler(Command('news'))
async def send_news(message: types.Message):
    news = await db_commands.get_last_news()
    if news:
        await message.answer(news.text)
    else:
        await message.answer("–í –±–æ—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π")

    await message.answer("–ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É –±–æ—Ç–∞? –ü–∏—à–∏ –≤ –¥–∏—Ä—Ä–µ–∫—Ç https://t.me/nsaars üòâ")


@dp.message_handler(Command('add_news'))
async def add_news(message: types.Message, state: FSMContext):
    if message.from_user.id in ADMINS:
        await message.answer("–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /news",
                             reply_markup=cancel_menu)
        await state.set_state("adding_news")


@dp.message_handler(content_types=["text"], state="adding_news")
async def add_news_text(message: types.Message, state: FSMContext):
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å":
        await message.answer("–ü–æ—Ö–æ–¥—É –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç :D", reply_markup=find_menu)
        await state.reset_state()
    else:
        news_text = message.text
        await message.answer(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–∏—Ç—å —Ç–∞–∫:")
        await message.answer(news_text)
        await message.answer("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å?", reply_markup=yes_no_menu)
        await state.update_data({"news_text": news_text})
        await state.set_state("saving_news")


@dp.message_handler(content_types=["text"], state="saving_news")
async def save_news(message: types.Message, state: FSMContext):
    if message.text == "–î–∞":
        data = await state.get_data()
        news = data['news_text']
        await db_commands.add_news(text=news, date=datetime.now())
        await message.answer("–ù–æ–≤–æ—Å—Ç—å –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!", reply_markup=find_menu)
        await state.reset_state()
    elif message.text == "–ù–µ—Ç":
        await message.answer("–ü—Ä–∏—à–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–Ω–æ–≤–æ :)", reply_markup=cancel_menu)
        await state.set_state("adding_news")
    else:
        await message.answer("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ :(")
